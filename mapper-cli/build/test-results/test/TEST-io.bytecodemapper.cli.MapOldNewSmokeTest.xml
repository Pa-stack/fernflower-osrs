<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="io.bytecodemapper.cli.MapOldNewSmokeTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2025-08-19T14:39:00" hostname="PRAGMATIQPASCAL" time="38.558">
  <properties/>
  <testcase name="runsMapOldNewAndWritesDebugDump" classname="io.bytecodemapper.cli.MapOldNewSmokeTest" time="38.558">
    <failure message="java.lang.OutOfMemoryError: GC overhead limit exceeded" type="java.lang.OutOfMemoryError">java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.nio.ByteBuffer.wrap(ByteBuffer.java:373)
	at java.nio.ByteBuffer.wrap(ByteBuffer.java:396)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:98)
	at java.io.ObjectInputStream$PeekInputStream.read(ObjectInputStream.java:2814)
	at java.io.ObjectInputStream$PeekInputStream.readFully(ObjectInputStream.java:2830)
	at java.io.ObjectInputStream$BlockDataInputStream.readInt(ObjectInputStream.java:3331)
	at java.io.ObjectInputStream.readHandle(ObjectInputStream.java:1783)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1844)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2186)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1669)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:503)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:461)
	at java.util.HashMap.readObject(HashMap.java:1416)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1184)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2322)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2213)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1669)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2431)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2355)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2213)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1669)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:503)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:461)
	at java.util.HashMap.readObject(HashMap.java:1418)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1184)
</failure>
  </testcase>
  <system-out><![CDATA[[DF] iterateToFixpoint start, nodes=1
[DF] iter=1, changed=false
[DF] iterateToFixpoint start, nodes=2
[DF] iter=1, changed=false
[DF] iterateToFixpoint start, nodes=1
[DF] iter=1, changed=false
[DF] iterateToFixpoint start, nodes=1
[DF] iter=1, changed=false
[DF] iterateToFixpoint start, nodes=1
[DF] iter=1, changed=false
[DF] iterateToFixpoint start, nodes=1
[DF] iter=1, changed=false
[DF] iterateToFixpoint start, nodes=1
[DF] iter=1, changed=false
[DF] iterateToFixpoint start, nodes=1
[DF] iter=1, changed=false
[DF] iterateToFixpoint start, nodes=1
[DF] iter=1, changed=false
[DF] iterateToFixpoint start, nodes=1
[DF] iter=1, changed=false
Wrote normalized debug to: C:\Users\pashq\IdeaProjects\fernflower-osrs\fernflower-osrs\mapper-cli\build\test-normalized_debug.txt
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
