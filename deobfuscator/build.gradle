// // >>> AUTOGEN: DEOBFUSCATOR BUILD.GROOVY BEGIN
// // Converted from deobfuscator.gradle.kts to Groovy DSL (Gradle 6.4.9, Java 1.8)
// // Safe to re-run; markers bound this file for idempotent updates.

// import org.apache.tools.ant.filters.ReplaceTokens

// plugins {
//     id 'com.github.hauner.jarTest' version '1.0.1'
//     id 'maven-publish'
// }

// configurations {
//     // custom configuration carrying deobfuscation jars
//     deobjars

//     testImplementation.extendsFrom deobjars
// }

// dependencies {
//     deobjars group: 'net.runelite.rs', name: 'vanilla', version: ProjectVersions.rsversion.toString()
//     deobjars project(':runescape-client')

//     annotationProcessor group: 'org.projectlombok', name: 'lombok', version: ProjectVersions.lombokVersion

//     implementation project(':runelite-api')
//     implementation project(':runescape-api')
//     implementation project(':cache')
//     implementation group: 'org.jetbrains', name: 'annotations', version: '22.0.0'
//     implementation group: 'org.ow2.asm', name: 'asm', version: '9.0'
//     implementation group: 'org.ow2.asm', name: 'asm-util', version: '9.0'
//     implementation group: 'net.runelite', name: 'fernflower', version: '07082019'
//     implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
//     implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
//     implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.32'

//     runtimeOnly group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.32'

//     testImplementation group: 'junit', name: 'junit', version: '4.12'
//     testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.1.0'
// }

// tasks {
//     test {
//         exclude '**/*'
//     }

//     // Compute tokens similarly to the Kotlin DSL version
//     // Note: accessing configuration files will resolve the configuration (acceptable parity with original)
//     def tokens = [
//         'rs.version': "${ProjectVersions.rsversion}",
//         'vanilla.jar': configurations.deobjars.files.find { it.name.startsWith('vanilla') }?.toString()?.replace('\\','/'),
//         'rs.client'  : configurations.deobjars.files.find { it.name.startsWith('runescape-client') }?.toString()?.replace('\\','/')
//     ]

//     processResources {
//         inputs.properties(tokens)
//         filesMatching('deob.properties') {
//             filter(ReplaceTokens, [tokens: tokens])
//             filteringCharset = 'UTF-8'
//         }
//     }

//     processTestResources {
//         inputs.properties(tokens)
//         filesMatching('deob-test.properties') {
//             filter(ReplaceTokens, [tokens: tokens])
//             filteringCharset = 'UTF-8'
//         }
//     }

//     // JavaExec helpers (use --args to pass parameters when noted)
//     register('Downloader$main()', JavaExec) {
//         group = 'gamepack'
//         classpath = sourceSets.main.runtimeClasspath
//         main = 'net.runelite.gamepack.Downloader'
//     }

//     register('Deob$main()', JavaExec) {
//         group = 'gamepack'
//         classpath = sourceSets.main.runtimeClasspath
//         main = 'net.runelite.deob.Deob'
//         args "${System.getProperty('user.home')}/gamepack/gamepack.jar",
//              "${buildDir}/libs/deobfuscated-${version}.jar"
//     }

//     register('UpdateMappings$main()', JavaExec) {
//         group = 'gamepack'
//         classpath = sourceSets.main.runtimeClasspath
//         main = 'net.runelite.deob.updater.UpdateMappings'
//         args "${buildDir.toString().replace('deobfuscator', 'runescape-client')}/libs/runescape-client-${version}.jar",
//              "${buildDir}/libs/deobfuscated-${version}.jar",
//              "${buildDir}/libs/updated-${version}.jar"
//     }

//     // Run with --args (path is relative to package root)
//     register('ClientVersion$main()', JavaExec) {
//         group = 'gamepack'
//         classpath = sourceSets.main.runtimeClasspath
//         main = 'net.runelite.deob.clientver.ClientVersionMain'
//     }
// }

// publishing {
//     repositories {
//         mavenLocal()
//     }
//     publications {
//         create('asd', MavenPublication) {
//             from components.java
//         }
//     }
// }
// // <<< AUTOGEN: DEOBFUSCATOR BUILD.GROOVY END
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.hauner.jarTest' version '1.0.1'
}

configurations {
    deobjars
    testImplementation {
        extendsFrom deobjars
    }
}

dependencies {
    deobjars "net.runelite.rs:vanilla:${ProjectVersions.rsversion}"
    deobjars project(':runescape-client')

    annotationProcessor "org.projectlombok:lombok:${ProjectVersions.lombokVersion}"

    implementation project(':runelite-api')
    implementation project(':runescape-api')
    implementation project(':cache')
    implementation 'org.jetbrains:annotations:22.0.0'
    implementation 'org.ow2.asm:asm:9.0'
    implementation 'org.ow2.asm:asm-util:9.0'
    implementation 'net.runelite:fernflower:07082019'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.slf4j:slf4j-api:1.7.32'

    runtimeOnly 'org.slf4j:slf4j-simple:1.7.32'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.1.0'
}

test {
    exclude '**/*'
}

def tokens = [
    'rs.version' : "${ProjectVersions.rsversion}",
    'vanilla.jar': configurations.deobjars.find { it.name.startsWith('vanilla') }.toString().replace('\\', '/'),
    'rs.client'  : configurations.deobjars.find { it.name.startsWith('runescape-client') }.toString().replace('\\', '/')
]

processResources {
    inputs.properties tokens
    filesMatching('deob.properties') {
        filter(ReplaceTokens, tokens: tokens)
        filteringCharset = 'UTF-8'
    }
}

processTestResources {
    inputs.properties tokens
    filesMatching('deob-test.properties') {
        filter(ReplaceTokens, tokens: tokens)
        filteringCharset = 'UTF-8'
    }
}

// JavaExec tasks (Gradle 6.x-compatible: use 'main' instead of 'mainClass')
tasks.register('Downloader$main()', JavaExec) {
    group = 'gamepack'
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.runelite.gamepack.Downloader'
}

tasks.register('Deob$main()', JavaExec) {
    group = 'gamepack'
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.runelite.deob.Deob'
    args "${System.getProperty('user.home')}/gamepack/gamepack.jar",
         "${buildDir}/libs/deobfuscated-${version}.jar"
}

tasks.register('UpdateMappings$main()', JavaExec) {
    group = 'gamepack'
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.runelite.deob.updater.UpdateMappings'
    args "${buildDir.toString().replace('deobfuscator','runescape-client')}/libs/runescape-client-${version}.jar",
         "${buildDir}/libs/deobfuscated-${version}.jar",
         "${buildDir}/libs/updated-${version}.jar"
}

// Run with --args (path relative to package root)
tasks.register('ClientVersion$main()', JavaExec) {
    group = 'gamepack'
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.runelite.deob.clientver.ClientVersionMain'
}

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        asd(MavenPublication) {
            from components.java
        }
    }
}
