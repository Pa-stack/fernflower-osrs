group = 'net.runelite'
// Just update this manually like the pro you are
version = '21062020'

// Copyright 2000-2019 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
apply plugin: 'java'
apply plugin: 'maven'

compileJava {
  sourceCompatibility '1.8'
  targetCompatibility '1.8'
}

sourceSets {
  main.java.srcDirs 'src'
  test.java.srcDirs 'test'
}

repositories { jcenter() }
dependencies {
  testCompile 'junit:junit:4.12'
  testCompile 'org.assertj:assertj-core:3.12.2'
}

jar {
  archiveName 'fernflower-' + project.version + '.jar'
  manifest {
    attributes 'Main-Class': 'org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler'
  }
}

test {
  // Ensure JUnit 4 is used and surface useful logs
  useJUnit()
  testLogging {
    events 'failed'
    exceptionFormat 'full'
    showStandardStreams = true
  }
}

// >>> AUTOGEN: BYTECODEMAPPER ROOT BUILD BEGIN
allprojects {
  repositories {
    mavenCentral()
    // Add JCenter only if strictly needed; keeping MC only for Java 8-safe libs.
  }
}

subprojects {
  apply plugin: 'java'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  tasks.withType(JavaExec).configureEach {
    // either form works
    maxHeapSize = '4g'
    jvmArgs = '-Xms1g'
  }

  tasks.withType(Test).configureEach {
    maxHeapSize = '4g'
  jvmArgs '-Xms1g'
  }

  tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release = null // ensure legacy toolchain works on JDK8/compat
    options.fork = true
    options.forkOptions.memoryMaximumSize = '2g'
  }

  test {
    useJUnit()
    testLogging {
      events "passed", "skipped", "failed"
    }
  }

  dependencies {
    testImplementation "junit:junit:4.13.2"
  }
}
// <<< AUTOGEN: BYTECODEMAPPER ROOT BUILD END
